name: Build And Deploy To VPS - Umbraco V13

on:
  workflow_call:
    inputs:
      frontend-directory:
        required: false
        type: string
      cd-path:
        required: false
        type: string
      vue-directory:
        required: false
        type: string
      cd-path-vue:
        required: false
        type: string
      organization-name:
        required: true
        type: string
      project-name:
        required: true
        type: string
      build-configuration:
        required: true
        default: 'release'
        type: string
      csproj-path:
        required: true
        type: string
      
### Some environment variables to ease use and keep oversight        
env:
  app-path: ${{ github.workspace }}\\Axendo.Umb.${{ inputs.organization-name }}.${{ inputs.project-name }}.Web

jobs:
  Checkout-source:
    name: Checkout source code
    runs-on: [self-hosted, axendo]
    steps:
    - name: git configure long path
      run: git config --global core.longpaths true
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0 #fetch-depth 0 indicates fetching all history, this is needed for frontend en vue caching
    
  Build-frontend:
    if: inputs.frontend-directory && vars.SKIP_FRONTEND != 'true' 
    name: Build Frontend
    needs: Checkout-source
    runs-on: [self-hosted, axendo]
    steps:
      - name: Build frontend with Webpack
        uses: AxendoNL/webpack-action@v1.2.0
        with:
          directory: ${{ github.workspace }}\${{ inputs.frontend-directory }}
          output-folder: '${{ env.app-path }}\\wwwroot\\assets'
          node-version: '${{vars.FRONTEND_NODE_VERSION}}'
          
  Build-vue:
    if: always() && inputs.vue-directory && vars.SKIP_VUE != 'true' && (needs.build-frontend.result == 'success' || needs.build-frontend.result == 'skipped')
    name: Build Vue
    needs: Build-frontend         
    runs-on: [self-hosted, axendo]
    steps:
      - name: Build vue apps
        uses: AxendoNL/webpack-action@v1.2.0
        with:
          directory: ${{ github.workspace }}\${{ inputs.vue-directory }}
          output-folder: '${{ env.app-path }}\\wwwroot\\vue-apps'
          node-version: '${{vars.VUE_NODE_VERSION}}'

  Build-NET:
    if: always() && (needs.build-frontend.result == 'success' || needs.build-frontend.result == 'skipped') && (needs.build-vue.result == 'success' || needs.build-vue.result == 'skipped')
    name: Build & Publish .NET
    needs: [Build-frontend, Build-vue]
    runs-on: [self-hosted, axendo]
    steps:
      - name: Set up environment variable for workspace
        run: |
          echo "archive_path=${{ github.workspace }}/Archive/${{ inputs.organization-name }}/${{ inputs.project-name }}/${{ github.ref_name }}" >> $env:GITHUB_ENV      
          echo "application_path=${{ github.workspace }}/Axendo.Umb.${{ inputs.organization-name }}.${{ inputs.project-name }}.Web" >> $env:GITHUB_ENV
      - name: Setup .NET
        uses: AxendoNL/dotnet-package-action@v12
        with:
          organization-name: ${{ inputs.organization-name }}
          project-name: ${{ inputs.project-name }}
          build-configuration: ${{ inputs.build-configuration }}
          csproj-path: ${{ inputs.csproj-path }}
          token: ${{ secrets.NUGET_PAT }}
      ### Remove files from artifact if build success
      - name: Cleanup root
        run: |
          Get-ChildItem -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\* -Include ('*.json', '*.pbd', '*.config') -Exclude '*.deps.json', '*.runtimeconfig.*' | Remove-Item -Verbose
          Get-ChildItem -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\wwwroot -Include ('*.config') -Recurse | Remove-Item -Verbose     
      ### Include folders from assets folder
      - name: Copy predefined folders with partial paths
        run: |
          Write-Output "Archive Path: $env:archive_path"
          Write-Output "Application Path: $env:application_path"
              
          # Predefined partial paths to copy
          $folders = @("wwwroot/assets", "wwwroot/vue-apps")

          # Iterate over the predefined folder partial paths
          foreach ($folder in $folders) {
            # Construct the full source and destination paths
            $sourcePath = Join-Path $env:application_path $folder
            $destinationPath = Join-Path $env:archive_path $folder

            # Check if the source folder exists
            if (Test-Path -Path $sourcePath) {
                # Create the destination folder if it doesn't exist
                if (-Not (Test-Path -Path $destinationPath)) {
                    New-Item -ItemType Directory -Path $destinationPath -Force
                }

                # Copy items from the source to the destination while retaining the folder structure
                Copy-Item -Path "$sourcePath/*" -Destination "$destinationPath" -Recurse -Force
                Write-Output "Copied items from '$sourcePath' to '$destinationPath'"
            } else {
                Write-Output "Source folder '$sourcePath' does not exist. Skipping..."
            }
        }
        shell: powershell



  Deploy:
    if: always() && (needs.build-frontend.result == 'success' || needs.build-frontend.result == 'skipped') && (needs.build-vue.result == 'success' || needs.build-vue.result == 'skipped')
    name: Deploy using WebDeploy
    needs: [Build-NET]
    runs-on: [self-hosted, axendo]
    steps: 
      - name: Deploy to VPS
        uses: AxendoNL/web-deploy-action@main
        with:
          website-name: ${{ vars.WEBSITE_NAME }}
          server-computer-name: ${{ vars.SERVER_COMPUTER_NAME }}
          server-username: ${{ secrets.SERVER_USERNAME }}
          server-password: ${{ secrets.SERVER_PASSWORD }}
          source-path: '${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\'
          target-path: '""'
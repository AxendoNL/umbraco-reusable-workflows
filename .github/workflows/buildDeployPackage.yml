name: Build Deploy Package Umbraco V9

on:
  workflow_call:
    inputs:
      front-end-directory:
        required: true
        type: string
      cd-path:
        required: false
        type: string
      organization-name:
        required: true
        type: string
      project-name:
        required: true
        type: string
      build-configuration:
        required: true
        default: 'release'
        type: string
      csproj-path:
        required: true
        type: string

jobs:
  Checkout-source:
    name: Checkout source code
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    
  ### run: echo "FRONTEND_HASH=$(git log -1 --pretty=format:'%H' --follow '${{ inputs.front-end-directory }}')" >> $env:GITHUB_ENV
  Get-Frontend-Hash:
    name: Get last commit hash from front-end-directory
    needs: Checkout-source
    runs-on: self-hosted
    outputs:
      hash: ${{ steps.FRONTEND_HASH.outputs.hash }}
    steps:
      - id: FRONTEND_HASH
        run: echo "::set-output name=hash::$(git log -1 --pretty=format:'%h' --follow '${{ inputs.front-end-directory }}')"
      
  ### This is a test function to check outputs of Get-Frontend-Hash!
  #Test-Frontend-Hash:
  #  name: Test env.FRONTEND_HASH
  #  needs: Get-Frontend-Hash
  #  runs-on: self-hosted
  #  steps:
  #    - name: Test variable
  #      run: echo ${{needs.Get-Frontend-Hash.outputs.hash}}   
      
  Build-frontend:
    name: Build Frontend
    needs: Get-Frontend-Hash
    runs-on: self-hosted
    steps:
      - name: Cache Frontend Build
        id: cache-fontend
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}\Axendo.Umb.${{ inputs.organization-name }}.${{ inputs.project-name }}.Web\wwwroot\assets
          key: frontend-build-${{needs.Get-Frontend-Hash.outputs.hash}}
      - name: build the frontend  ### below if will make sure this only runs when the frontend needs to build
        if: ${{ steps.cache-fontend.outputs.cache-hit == 'false' }}
        uses: AxendoNL/build-frontend-action@umbraco-v9
        with:
          front-end-directory: ${{ inputs.front-end-directory }}
          cd-path: ${{ inputs.cd-path }}

  Build-NET:
    name: Build & Publish .NET
    needs: Build-frontend
    runs-on: self-hosted
    steps:
      - name: Setup .NET
        uses: AxendoNL/dotnet-package-action@umbraco-v9
        with:
          organization-name: ${{ inputs.organization-name }}
          project-name: ${{ inputs.project-name }}
          build-configuration: ${{ inputs.build-configuration }}
          csproj-path: ${{ inputs.csproj-path }}
      ### Remove files from artifact if build success
      - name: Cleanup root
        run: |
          Get-ChildItem -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\* -Include ('*.json', '*.pbd', '*.config') | Remove-Item -Verbose
          Get-ChildItem -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\wwwroot -Include ('*.config') -Recurse | Remove-Item -Verbose
      ### Create zipped artifact if build success
      - name: Create archive
        run: Compress-Archive -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }} -DestinationPath ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\Archive.zip
      ### Upload zipped artifact if build success
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.organization-name }}-${{ inputs.project-name }}-${{ github.sha }}
          path: "${{ github.workspace }}/Archive/${{ inputs.organization-name }}/${{ inputs.project-name }}/${{ github.ref_name }}/Archive.zip"
      ### Cleanup
      - name: Remove Config and Json files
        run: Remove-Item '${{ github.workspace }}\Archive' -Recurse 

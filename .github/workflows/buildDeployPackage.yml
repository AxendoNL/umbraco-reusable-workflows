name: Build Deploy Package Umbraco V12

on:
  workflow_call:
    inputs:
      frontend-directory:
        required: false
        type: string
      cd-path:
        required: false
        type: string
      vue-directory:
        required: false
        type: string
      cd-path-vue:
        required: false
        type: string
      organization-name:
        required: true
        type: string
      project-name:
        required: true
        type: string
      build-configuration:
        required: true
        default: 'release'
        type: string
      csproj-path:
        required: true
        type: string
      
### Some environment variables to ease use and keep oversight        
env:
  app-path: ${{ github.workspace }}\Axendo.Umb.${{ inputs.organization-name }}.${{ inputs.project-name }}.Web

jobs:
  Checkout-source:
    name: Checkout source code
    runs-on: [self-hosted, axendo]
    steps:
    - name: git configure long path
      run: git config --global core.longpaths true
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0 #fetch-depth 0 indicates fetching all history, this is needed for frontend en vue caching
    
  Build-frontend:
    if: ${{ inputs.frontend-directory }}
    name: Build Frontend
    needs: Checkout-source
    runs-on: [self-hosted, axendo]
    steps:
      - name: Build frontend with Webpack
        uses: AxendoNL/webpack-action@v1.2.0
        with:
          directory: ${{ inputs.frontend-directory }}
          output-folder: '${{ env.app-path }}\\wwwroot\\assets'
          node-version: '${{vars.FRONTEND_NODE_VERSION}}'
          
  Build-vue:
    if: always() && ${{ inputs.vue-directory }} && (needs.build-frontend.result == 'success' || needs.build-frontend.result == 'skipped')
    name: Build Vue
    needs: Build-frontend         
    runs-on: [self-hosted, axendo]
    steps:
      - name: Build vue apps
        uses: AxendoNL/webpack-action@v1.2.0
        with:
          directory: ${{ inputs.vue-directory }}
          output-folder: '${{ env.app-path }}\\wwwroot\\vue-apps'
          node-version: '${{vars.VUE_NODE_VERSION}}'

  Build-NET:
    if: always() && (needs.build-frontend.result == 'success' || needs.build-frontend.result == 'skipped') && (needs.build-vue.result == 'success' || needs.build-vue.result == 'skipped')
    name: Build & Publish .NET
    needs: [Build-frontend, Build-vue]
    runs-on: [self-hosted, axendo]
    steps:
      - name: Setup .NET
        uses: AxendoNL/dotnet-package-action@v12
        with:
          organization-name: ${{ inputs.organization-name }}
          project-name: ${{ inputs.project-name }}
          build-configuration: ${{ inputs.build-configuration }}
          csproj-path: ${{ inputs.csproj-path }}
          token: ${{ secrets.NUGET_PAT }}
      ### Remove files from artifact if build success
      - name: Cleanup root
        run: |
          Get-ChildItem -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\* -Include ('*.json', '*.pbd', '*.config') -Exclude '*.deps.json', '*.runtimeconfig.*' | Remove-Item -Verbose
          Get-ChildItem -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\wwwroot -Include ('*.config') -Recurse | Remove-Item -Verbose
      ### Create zipped artifact if build success
      - name: Create archive
        run: Compress-Archive -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }} -DestinationPath ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\Archive.zip
      ### Upload zipped artifact if build success
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.organization-name }}-${{ inputs.project-name }}-${{ github.sha }}
          path: "${{ github.workspace }}/Archive/${{ inputs.organization-name }}/${{ inputs.project-name }}/${{ github.ref_name }}/Archive.zip"
      
        
  Cleanup:
    if: always() && vars.SKIP_CLEANUP != 'true'
    name: cleanup files
    needs: Build-NET
    runs-on: [self-hosted, axendo]
    steps:
    - name: Delete GitHub workspace
      run: Remove-Item -Recurse -Force ./*
    - name: Remove Config and Json files
      run: Remove-Item '${{ github.workspace }}\Archive' -Recurse 
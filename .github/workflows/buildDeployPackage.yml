name: Build Deploy Package Umbraco V8.1

on:
  workflow_call:
    inputs:
      frontend-directory:
        required: false
        type: string
      cd-path:
        required: false
        type: string
      vue-directory:
        required: false
        type: string
      cd-path-vue:
        required: false
        type: string
      organization-name:
        required: true
        type: string
      project-name:
        required: true
        type: string
      build-configuration:
        required: true
        default: 'release'
        type: string
      csproj-path:
        required: true
        type: string
        
### Some environment variables to ease use and keep oversight        
env:
  app-path: ${{ github.workspace }}\Axendo.Umb.${{ inputs.organization-name }}.${{ inputs.project-name }}.Web

jobs:
  Checkout-source:
    name: Checkout source code
    runs-on: [self-hosted, axendo]
    steps:
    - name: git configure long path
      run: git config --global core.longpaths true
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0 #fetch-depth 0 indicates fetching all history, this is needed for frontend en vue caching

  Build-frontend:
    if: ${{ inputs.frontend-directory }}
    name: Build Frontend
    needs: Checkout-source
    runs-on: [self-hosted, axendo]
    steps:
      - name: build the frontend
        uses: AxendoNL/build-frontend-action@umbraco-v8.1
        with:
          frontend-directory: ${{ inputs.frontend-directory }}
          cd-path: ${{ inputs.cd-path }}
          app-path: ${{ env.app-path }}
  
  Build-vue:
    if:  ${{ inputs.vue-directory }}
    name: Build Vue
    needs: Build-frontend         
    runs-on: [self-hosted, axendo]
    steps:
      - name: Build vue apps
        uses: AxendoNL/build-vue-action@umbraco-v8.1
        with:
          vue-directory: ${{ inputs.vue-directory }}
          cd-path-vue: ${{ inputs.cd-path-vue }}
          app-path: ${{ env.app-path }}

  Build-NET:
    name: Build & Publish .NET
    needs: Build-vue
    runs-on: [self-hosted, axendo]
    steps:
      - name: Setup .NET
        uses: AxendoNL/dotnet-package-action@umbraco-v8
        with:
          organization-name: ${{ inputs.organization-name }}
          project-name: ${{ inputs.project-name }}
          build-configuration: ${{ inputs.build-configuration }}
          csproj-path: ${{ inputs.csproj-path }}

  Delete-Files:
    name: Delete non-production files
    needs: Build-NET
    runs-on: [self-hosted, axendo]
    defaults:
      run:
        working-directory: ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}
    steps:
      - name: Remove json, pbd and config files
        run:  Get-ChildItem -Path .\* -Include ('*.json', '*.pbd', '*.config') -Exclude '*.deps.json', '*.runtimeconfig.*' | Remove-Item -Verbose
      - name: Delete Config folder
        run: Remove-Item Config -Force -Recurse
      - name: Delete App_Data folder
        run: Remove-Item App_Data -Force -Recurse
      - name: Remove all .lic files
        run: Get-ChildItem -Path .\*.lic -Recurse -Force | Remove-Item -Verbose
      - name: Remove robots.txt
        run: if(Test-Path robots.txt){ Remove-Item robots.txt }
      - name: Remove gitignore
        run: if(Test-Path ".gitignore"){ Remove-Item ".gitignore" }
      - name: Remove robots.txt
        run: if(Test-Path ".gitattributes"){ Remove-Item ".gitattributes" }

  Create-Artifact:
    name: Create Artifact
    needs: Delete-Files
    runs-on: [self-hosted, axendo]
    steps:
      - name: Create archive
        run: Compress-Archive -Path ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }} -DestinationPath ${{ github.workspace }}\Archive\${{ inputs.organization-name }}\${{ inputs.project-name }}\${{ github.ref_name }}\Archive.zip
  
  Upload-Artifact:
    name: Upload Artifact
    needs: Create-Artifact
    runs-on: [self-hosted, axendo]
    steps:
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.organization-name }}-${{ inputs.project-name }}-${{ github.sha }}
          path: "${{ github.workspace }}/Archive/${{ inputs.organization-name }}/${{ inputs.project-name }}/${{ github.ref_name }}/Archive.zip"

  Cleanup:
    if: ${{ always() }}
    needs: Upload-Artifact
    runs-on: [self-hosted, axendo]
    steps:
      - name: Remove Config and Json files
        run: Remove-Item '${{ github.workspace }}\Archive' -Recurse 
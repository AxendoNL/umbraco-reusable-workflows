name: Build Deploy Package Umbraco V9

on:
  workflow_call:
    inputs:
      front-end-directory:
        required: true
        type: string
      cd-path:
        required: false
        type: string
      organization-name:
        required: true
        type: string
      project-name:
        required: true
        type: string
      build-configuration:
        required: true
        default: 'release'
        type: string
      csproj-path:
        required: true
        type: string

jobs:
  Checkout-source:
    name: Checkout source code
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    
  ### run: echo "FRONTEND_HASH=$(git log -1 --pretty=format:'%H' --follow '${{ inputs.front-end-directory }}')" >> $env:GITHUB_ENV
  Get-Frontend-Hash:
    name: Get last commit hash from front-end-directory env.FRONTEND_HASH 
    needs: Checkout-source
    runs-on: self-hosted
    outputs:
      frontend_hash: ${{ steps.FRONTEND_HASH.outputs.hash }}
    steps:
      - id: FRONTEND_HASH
        run: echo "::set-output name=hash::$(git log -1 --pretty=format:'%H' --follow '${{ inputs.front-end-directory }}')"
      #- name: Test variable
      #  run: echo ${env:FRONTEND_HASH}
      #- name: Display the path
      #  run: echo ${env}
        
  ### run: echo ${env:FRONTEND_HASH}  
  Test-Frontend-Hash:
    name: Test env.FRONTEND_HASH
    needs: Get-Frontend-Hash
    runs-on: self-hosted
    steps:
      - name: Test variable
        run: echo ${{needs.Get-Frontend-Hash.outputs.hash}}
        
      
  Build-frontend:
    name: Build Frontend
    needs: Get-Frontend-Hash
    runs-on: self-hosted
    steps:
      - name: build the frontend
        uses: AxendoNL/build-frontend-action@umbraco-v9
        with:
          front-end-directory: ${{ inputs.front-end-directory }}
          cd-path: ${{ inputs.cd-path }}

  Build-NET:
    name: Build & Publish .NET
    needs: Build-frontend
    runs-on: self-hosted
    steps:
    - name: Setup .NET
      uses: AxendoNL/dotnet-package-action@umbraco-v9
      with:
        organization-name: ${{ inputs.organization-name }}
        project-name: ${{ inputs.project-name }}
        build-configuration: ${{ inputs.build-configuration }}
        csproj-path: ${{ inputs.csproj-path }}
